package lections.code.first.codeHere;

import java.util.Scanner;

/**
 * –°–æ–∑–¥–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤–≤–µ—Å—Ç–∏ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –º–∞—Å—Å–∏–≤ —Ä–∞–∑–º–µ—Ä–æ–º n –∏ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ –ø–æ —É–±—ã–≤–∞–Ω–∏—é. –¢.–µ.
 * <p>1. –ù—É–∂–Ω–æ —Å—á–∏—Ç–∞—Ç—å —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –∑–Ω–∞—á–µ–Ω–∏–µ —á–∏—Å–ª–∞ "n"(—Ä–∞–∑–º–µ—Ä –º–∞—Å—Å–∏–≤–∞), –∏—Å–ø–æ–ª—å–∑—É—è –º–µ—Ç–æ–¥ {@link #makeMassiveUsingKeybord()} )};</p>
 * <p>2.1 –í–≤–µ—Å—Ç–∏ –∑–Ω–∞—á–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ –º–∞—Å—Å–∏–≤ (–ø—Ä–∏ —Ä–∞–∑–º–µ—Ä–µ –º–∞—Å—Å–∏–≤–∞, —Ä–∞–≤–Ω–æ–º ¬´n¬ª, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–≤–µ—Å—Ç–∏ —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Å—Å–∏–≤–∞ ¬´n¬ª —Ä–∞–∑).</p>
 * <p>2.2 –î–∞–ª–µ–µ –≤—ã–≤–µ—Å—Ç–∏ –º–∞—Å—Å–∏–≤, –∫–æ—Ç–æ—Ä—ã–π –º—ã —Å–æ–∑–¥–∞–ª–∏, –∫–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç —á–µ—Ä–µ–∑ –∑–∞–ø–∏—Ç—É—é –∏ –ø—Ä–æ–±–µ–ª, –∏—Å–ø–æ–ª—å–∑—É—è –º–µ—Ç–æ–¥ {@link #printMassive()}.
 * <p><code>Example: 7, 23, 12, 0, 322</code></p>
 * <p>3. –û—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –±–∞–∑–æ–≤—ã–π –º–∞—Å—Å–∏–≤ –ø–æ —É–±—ã–≤–∞–Ω–∏—é —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–æ–π –ü—É–∑—ã—Ä—å–∫–∞, –∏—Å–ø–æ–ª—å–∑—É—è –º–µ—Ç–æ–¥ {@link #sortMassiveByBubbleWay()}.</p>
 * <p>4. –í—ã–≤–µ—Å—Ç–∏ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤, –∏—Å–ø–æ–ª—å–∑—É—è –º–µ—Ç–æ–¥ {@link #printSortedDescMassive()}.
 * <p><code>Example: [322, 23, 12, 7, 0]</code></p>
 */
public class Main {

    public static int ARRAY_SIZE;
    public static int[] BASIC_ARRAY_OR_SORTED_ARRAY;
    public static Scanner SCANNER = new Scanner(System.in);

    /**
     * –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –≤ –ø—Ä–æ–≥—Ä–∞–º–º—É.
     * @param args –ù–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã, —Å –∫–æ—Ç–æ—Ä—ã—Ö –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –∑–∞–ø—É—Å–∫ –ª—é–±–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã.
     */
    public static void main(String[] args) {

        //–ó–∞–¥–∞–µ–º —Ä–∞–∑–º–µ—Ä –º–∞—Å—Å–∏–≤–∞.
        inputArraySizeFromKeybord();
        //–°–æ–∑–¥–∞–µ–º –º–∞—Å—Å–∏–≤.
        makeMassiveUsingKeybord();

        System.out.println("Your base massive is:");
        //–í—ã–≤–æ–¥–∏–º —Å—á–∏—Ç–∞–Ω–Ω—ã–π —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –º–∞—Å—Å–∏–≤.
        printMassive();
        System.out.println("");

        System.out.println("Sorted massive DESC:");
        //–°–æ—Ä—Ç–∏—Ä—É–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π –º–∞—Å—Å–∏–≤ –º–µ—Ç–æ–¥–æ–º –ü—É–∑—ã—Ä—å–∫–∞.
        sortMassiveByBubbleWay();
        //–í—ã–≤–æ–¥–∏–º –Ω–∞ —ç–∫—Ä–∞–Ω –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤ –ø–æ —É–±—ã–≤–∞–Ω–∏—é.
        printSortedDescMassive();
    }

    /**
     *
     * –°—á–∏—Ç—ã–≤–∞–µ–º —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –∑–Ω–∞—á–µ–Ω–∏–µ <h1>{@link #ARRAY_SIZE}</h1> (–∏—Ç–æ–≥–æ–≤—ã–π —Ä–∞–∑–º–µ—Ä –±—É–¥—É—â–µ–≥–æ –º–∞—Å—Å–∏–≤–∞).
     */
    public static void inputArraySizeFromKeybord(){

        System.out.print("Enter massive size: ‚Üí ");

        //–°—á–∏—Ç—ã–≤–∞–µ–º –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —á–∏—Å–ª–æ "n" (—Ä–∞–∑–º–µ—Ä –±—É–¥—É—â–µ–≥–æ –º–∞—Å—Å–∏–≤–∞) c –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã.
        ARRAY_SIZE = SCANNER.nextInt();
    }

    /**
     * –ú–µ—Ç–æ–¥, –≤ –∫–æ—Ç–æ—Ä–æ–º —Å—á–∏—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã, —Å—Ç–æ–ª—å–∫–æ —Ä–∞–∑, —Å–∫–æ–ª—å–∫–æ —É –Ω–∞—Å —É–∫–∞–∑–∞–Ω {@link #ARRAY_SIZE}.
     * <p><b>–®–∞–±–ª–æ–Ω —Ç–µ–∫—Å—Ç–∞, –∫–æ—Ç–æ—Ä—ã–º –±—É–¥–µ—Ç –∑–∞–ø—Ä–∞—à–∏–≤–∞—Ç—å—Å—è –∫–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç:</b></p>
     * <p><code>Enter element {@literal <0, 1, 2,...}{@link #ARRAY_SIZE}>:</code></p>
     */
    public static void makeMassiveUsingKeybord(){

        //–°–æ–∑–¥–∞–µ–º –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ —Ä–∞–∑–º–µ—Ä–∞ n.
        BASIC_ARRAY_OR_SORTED_ARRAY = new int[ARRAY_SIZE];
        //–ó–∞–ø—Ä–æ—Å –Ω–∞ –≤–≤–æ–¥ –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Å—Å–∏–≤–∞, –Ω–∞—á–∏–Ω–∞—è —Å 0-–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –¥–æ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ (0,1,2,...n).
        for (int i = 0; i < ARRAY_SIZE; i++){
            System.out.print("Enter element " + i + ": ");              //–í—ã–≤–æ–¥–∏—Ç –Ω–∞ —ç–∫—Ä–∞–Ω —Å—Ç—Ä–æ–∫—É —Ç–∏–ø–∞: <Enter element [–Ω–æ–º–µ—Ä —ç–ª–µ–º–µ–Ω—Ç–∞]: {–í–≤–µ–¥–µ–Ω–Ω–æ–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ} /n>
            BASIC_ARRAY_OR_SORTED_ARRAY[i] = SCANNER.nextInt();         //–ó–∞–ø–æ–ª–Ω—è–µ—Ç –º–∞—Å—Å–∏–≤ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ –æ—Ç 0-–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –¥–æ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ.
        }
    }

    /**
     * –ú–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–≤–æ–¥–∏—Ç –ª—é–±–æ–π –º–∞—Å—Å–∏–≤.
     * <p><b><code>Example: 7, 23, 12, 0, 322</code></b></p>
     */
    public static void  printMassive(){

        /*
            –í—ã–≤–æ–¥–∏—Ç –Ω–∞ —ç–∫—Ä–∞–Ω –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ –º–∞—Å—Å–∏–≤–∞, –∫—Ä–æ–º–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ, –¥–æ–±–∞–≤–∏–≤ —à–∞–±–ª–æ–Ω –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
                                                [", "(–ó–ê–ü–Ø–¢–ê–Ø + –ü–†–û–ë–ï–õ)].
         */
        for (int i = 0; i < ARRAY_SIZE - 1; i++){
            System.out.print(BASIC_ARRAY_OR_SORTED_ARRAY[i] + ", ");
        }
        //–í—ã–≤–æ–¥–∏–º –æ—Ç–¥–µ–ª—å–Ω–æ –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç, —Ç.–∫. –ø–æ—Å–ª–µ –Ω–µ–≥–æ –Ω–µ –¥–æ–ª–∂–Ω–æ —Å—Ç–æ—è—Ç—å [", "(–ó–ê–ü–Ø–¢–û–ô + –ü–†–û–ë–ï–õ)]).
        System.out.print(BASIC_ARRAY_OR_SORTED_ARRAY[ARRAY_SIZE - 1]);
    }


    /**
     * –ú–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–≤–æ–¥–∏—Ç –Ω–∞ —ç–∫—Ä–∞–Ω –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –º–∞—Å—Å–∏–≤–∞ –ø–æ —É–±—ã–≤–∞–Ω–∏—é.
     */
    public static void printSortedDescMassive(){
        /*
            –í—ã–≤–æ–¥–∏—Ç –Ω–∞ —ç–∫—Ä–∞–Ω –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ —É–±—ã–≤–∞–Ω–∏—é –º–∞—Å—Å–∏–≤–∞, –¥–æ–±–∞–≤–∏–≤ —à–∞–±–ª–æ–Ω –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
                         [", "(–ó–ê–ü–Ø–¢–û–ô + –ü–†–û–ë–ï–õ)]) + –æ–±–µ—Ä–Ω—É–≤ –µ–≥–æ –≤ –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã–µ —Å–∫–æ–±–∫–∏ "[0-–æ–π, 1-—ã–π, 2-–æ–π,...n-—ã–π]
         */
        System.out.print("[");                              //1. –û—Ç–∫—Ä—ã–≤–∞–µ–º –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã–µ —Å–∫–æ–±–∫–∏;
        printMassive();                                     //2. –í—ã–≤–æ–¥–∏–º —Ç–∞–∫ –∂–µ, –∫–∞–∫ –∏ –±–∞–∑–æ–≤—ã–π –º–∞—Å—Å–∏–≤;
        System.out.println("]");                            //3. –ó–∞–∫—Ä—ã–≤–∞–µ–º –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã–µ —Å–∫–æ–±–∫–∏
    }

    /**
     * –ú–µ—Ç–æ–¥, –≤—ã–ø–æ–ª–Ω—è—é—â–∏–π —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É –º–∞—Å—Å–∏–≤–∞ –ª—é–±–æ–π —Ä–∞–∑–º–µ—Ä–Ω–æ—Å—Ç–∏, —Å –ª—é–±—ã–º–∏ —Ü–µ–ª–æ—á–∏—Å–ª–µ–Ω–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ —ç–ª–µ–º–µ–Ω—Ç–æ–≤. –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç
     * –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ —É–±—ã–≤–∞–Ω–∏—é –∏—Å—Ö–æ–¥–Ω—ã–π –º–∞—Å—Å–∏–≤ {@link #BASIC_ARRAY_OR_SORTED_ARRAY}.
     * @exception ArrayIndexOutOfBoundsException - –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ, –∫–∞–∫ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–æ –≤—ã–ø–∞–¥–µ–Ω–∏–µ –¥–∞–Ω–Ω–æ–π –æ—à–∏–±–∫–∏ –ø—Ä–∏
     * –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ä–∞–∑—É 2-—É—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Å—Å–∏–≤–∞: 1-—ã–π - —Ç–æ—Ç, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π —É–∫–∞–∑—ã–≤–∞–µ—Ç "–∫—É—Ä—Å–æ—Ä"(–∑–Ω–∞—á–µ–Ω–∏–µ i), 2-–æ–π - —Å–ª–µ–¥—É—é—â–∏–π
     * —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ 1-–æ–≥–æ.
     */
    public static void sortMassiveByBubbleWay(){
        /*
            –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è, –≤ –∫–æ—Ç–æ—Ä–æ–π —É–∫–∞–∑–∞–Ω–æ, –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω –ª–∏ –¥–∞–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤. –î–æ —Ç–µ—Ö –ø–æ—Ä, –ø–æ–∫–∞ –æ–Ω–∞ —Ä–∞–≤–Ω–∞ "false", —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞
            –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è.
         */
        boolean isSorted = false;

        /*
            –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–ø–æ–ª–Ω—è–µ—Ç —Ä–æ–ª—å —É—Å–ª–æ–≤–Ω–æ–≥–æ –±—É—Ñ–µ—Ä–∞ –æ–±–º–µ–Ω–∞. –¢.–µ. –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –∏–ª–∏ –æ–±–ª–∞—Å—Ç—å –≤
            –ø–∞–º—è—Ç–∏, –≥–¥–µ —Ö—Ä–∞–Ω–∏—Ç—Å—è —Ç–µ–∫—Å—Ç, –∫ –∫–æ—Ç–æ—Ä–æ–º—É –º—ã –ø—Ä–∏–º–µ–Ω–∏–ª–∏ —Å–æ—á–µ—Ç–∞–Ω–∏–µ –∫–ª–∞–≤–∏—à "CTRL+C".
         */
        int bufferValue;

        //–ü—Ä–æ—Ö–æ–¥–∏—Ç—å –ø–æ –≤—Å–µ–º—É –º–∞—Å—Å–∏–≤—É –∑–∞–Ω–æ–≤–æ, –¥–æ —Ç–µ—Ö –ø–æ—Ä, –ø–æ–∫–∞ –º–∞—Å—Å–∏–≤ –ù–ï —Å—Ç–∞–Ω–µ—Ç –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω.
        while (!isSorted) {
            //–ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ –Ω–∞ —ç—Ç–æ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏ –º–∞—Å—Å–∏–≤ –±—É–¥–µ—Ç –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω
            isSorted = true;
            /*
                –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –º–∞—Å—Å–∏–≤—É <—Ä–∞–∑–º–µ—Ä_–º–∞—Å—Å–∏–≤–∞ - 1> —Ä–∞–∑, —Ç–∞–∫ –∫–∞–∫ –±–µ—Ä–µ–º —Å—Ä–∞–∑—É 2 —ç–ª–µ–º–µ–Ω—Ç–∞, –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ
                –ø—Ä–æ–≥—Ä–∞–º–º–∞ —Å—Ä–∞–∑—É 2 —ç–ª–µ–º–µ–Ω—Ç–∞, –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–∫—Ä–æ–µ—Ç—Å—è —Å –æ—à–∏–±–∫–æ–π "ArrayIndexOutOfBoundException"
            */
            for (int i = 0; i < BASIC_ARRAY_OR_SORTED_ARRAY.length - 1; i++) {
                /*
                    –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç ‚Ññi –∏ —Å–ª–µ–¥—É—é—â–∏–π –∑–∞ –Ω–∏–º —ç–ª–µ–º–µ–Ω—Ç –Ω–µ –Ω–∞—Ä—É—à–∞—é—Ç –ø–æ—Ä—è–¥–æ–∫ —É–±—ã–≤–∞–Ω–∏—è –∏ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –Ω–∞
                    —Å–≤–æ–∏—Ö –º–µ—Å—Ç–∞—Ö (–õ–ï–í–´–ô –Ω–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –º–µ–Ω—å—à–µ –ü–†–ê–í–û–ì–û [!(–õ–ï–í–´–ô < –ü–†–ê–í–û–ì–û)]
                 */
                if (BASIC_ARRAY_OR_SORTED_ARRAY[i] < BASIC_ARRAY_OR_SORTED_ARRAY[i + 1]){
                    /*
                        –ï—Å–ª–∏ –Ω–∞—Ä—É—à–µ–Ω –ø–æ—Ä—è–¥–æ–∫ –∏ –∏—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–º–µ–Ω—è—Ç—å –º–µ—Å—Ç–∞–º–∏, —Ç–æ–≥–¥–∞ –ø–æ–º–µ—á–∞–µ–º, —á—Ç–æ –º–∞—Å—Å–∏–≤ –µ—â—ë –Ω–µ
                        –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω.
                     */
                    isSorted = false;

                    //–û–ø–∏—Å–∞–Ω–∏–µ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –ø—É–∑—ã—Ä—å–∫–æ–º —è–∑—ã–∫–æ–º Java
                    //         ü†ìü†ìü†ìü†ì
                    //1. –ó–∞–ø–æ–º–∏–Ω–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –õ–ï–í–û–ì–û —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ —É—Å–ª–æ–≤–Ω–æ–º –±—É—Ñ–µ—Ä–µ;
                    //2. –ù–∞ –º–µ—Å—Ç–æ –õ–ï–í–û–ì–û —ç–ª–µ–º–µ–Ω—Ç–∞ —Å—Ç–∞–≤–∏—Ç –ü–†–ê–í–´–ô;
                    //3. –ù–∞ –º–µ—Å—Ç–æ –ü–†–ê–í–û–ì–û —Å—Ç–∞–≤–∏–º –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ –±—É—Ñ–µ—Ä–∞ (–õ–ï–í–û–ì–û —ç–ª–µ–º–µ–Ω—Ç–∞).
                    bufferValue = BASIC_ARRAY_OR_SORTED_ARRAY[i];
                    BASIC_ARRAY_OR_SORTED_ARRAY[i] = BASIC_ARRAY_OR_SORTED_ARRAY[i + 1];
                    BASIC_ARRAY_OR_SORTED_ARRAY[i + 1] = bufferValue;
                }
            }
        }
    }
}